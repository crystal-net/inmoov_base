controller_manager:
  ros__parameters:
    update_rate: 100
    # use_sim_time: true

    # I believe that the DiffDriveController refered to here
    # is part of the ROS2_Control package.  This needs confirmation
    diff_controller:
      type: diff_drive_controller/DiffDriveController

    # It has been noted that this is a controller that doesn't
    # control anything.  # robot_state_publisher needs the 
    # /joint_states topic to be publishes and this controller
    # will accomplish this. (I think)
    # Its also been noted that this might not be needed for this
    # type of robot but I don't know why.  Just folling instructions. 
    joint_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster



diff_cont:
  ros__parameters:

    publish_rate: 50.0

    # base_frame_id is defined in our URDF file and must match here
    # I think this is where transforms are calculated from
    base_frame_id: base_link

    # In the hardware interface in the ros2_control.xacro file
    # we defined the left and right wheel joints and now we
    # are doing the same here for the controller
    # so the hardware interface and gazebo controller plugin match
    left_wheel_names: ['left_wheel_joint']
    right_wheel_names: ['right_wheel_joint']
    
    # this values are also in relation to what has already
    # been defined in the URDF
    wheel_separation: 0.297
    wheel_radius: 0.033

    use_stamped_vel: false

    # open_loop: false    

    # wheels_per_side: x
    # wheel_separation_multiplier: x
    # left_wheel_radius_multiplier: x
    # right_wheel_radius_multiplier: x

    # odom_frame_id: x
    # pose_covariance_diagonal: x
    # twist_covariance_diagonal: x
    # open_loop: x
    # enable_odom_tf: x

    # cmd_vel_timeout: x
    # publish_limited_velocity: x
    # velocity_rolling_window_size: x
    

    # linear.x.has_velocity_limits: false
    # linear.x.has_acceleration_limits: false
    # linear.x.has_jerk_limits: false
    # linear.x.max_velocity: NAN
    # linear.x.min_velocity: NAN
    # linear.x.max_acceleration: NAN
    # linear.x.min_acceleration: NAN
    # linear.x.max_jerk: NAN
    # linear.x.min_jerk: NAN

    # angular.z.has_velocity_limits: false
    # angular.z.has_acceleration_limits: false
    # angular.z.has_jerk_limits: false
    # angular.z.max_velocity: NAN
    # angular.z.min_velocity: NAN
    # angular.z.max_acceleration: NAN
    # angular.z.min_acceleration: NAN
    # angular.z.max_jerk: NAN
    # angular.z.min_jerk: NAN




# joint_broad:
#   ros__parameters: